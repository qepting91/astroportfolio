---
import BaseLayout from './Layout.astro';
const { frontmatter } = Astro.props;

const getImageConfig = (imageUrl: string) => {
    const config = {
        aspectRatio: '56.25%',
        objectFit: 'contain' as const,
        padding: '0',
        maxHeight: '300px'
    };

    if (imageUrl.includes('logo')) {
        config.padding = '2rem';
    }

    return config;
};

const imageConfig = getImageConfig(frontmatter.image.url);
---

<BaseLayout pageTitle={frontmatter.title}>
    <article class="project-container">
        <header class="project-header">
            <h2 class="project-title">{frontmatter.title}</h2>
            <div class="project-image-wrapper">
                <div class="project-image-container">
                    <picture class="image-picture">
                        {!frontmatter.image.url.endsWith('.png') && (
                            <source 
                                srcset={frontmatter.image.url.replace(/\.(jpg|jpeg)$/, '.webp')} 
                                type="image/webp"
                            />
                        )}
                        <img 
                            src={frontmatter.image.url}
                            alt={frontmatter.image.alt}
                            width="1200"
                            height="675"
                            loading="lazy"
                            decoding="async"
                            class="project-image"
                        />
                    </picture>
                </div>
            </div>
        </header>

        <div class="project-content">
            <slot />
        </div>

        <footer class="project-meta">
            {frontmatter.platform && (
                <div class="meta-item">
                    <span class="meta-label">PLATFORM</span>
                    <span class="meta-value">{frontmatter.platform}</span>
                </div>
            )}

            {frontmatter.stack && (
                <div class="meta-item">
                    <span class="meta-label">STACK</span>
                    <div class="tech-stack">
                        {frontmatter.stack.split(',').map((tech) => (
                            <span class="tech-badge">{tech.trim()}</span>
                        ))}
                    </div>
                </div>
            )}

            {frontmatter.website && (
                <div class="meta-item">
                    <span class="meta-label">WEBSITE</span>
                    <a class="meta-link" href={frontmatter.website} target="_blank" rel="noopener noreferrer">
                        Visit Site
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
                            <polyline points="15 3 21 3 21 9"></polyline>
                            <line x1="10" y1="14" x2="21" y2="3"></line>
                        </svg>
                    </a>
                </div>
            )}

            {frontmatter.github && (
                <div class="meta-item">
                    <span class="meta-label">GITHUB</span>
                    <a class="meta-link" href={frontmatter.github} target="_blank" rel="noopener noreferrer">
                        View Code
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
                        </svg>
                    </a>
                </div>
            )}
        </footer>
    </article>
</BaseLayout>

<style>
    .project-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .project-header {
        margin-bottom: 3rem;
    }

    .project-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--text-primary);
        margin-bottom: 1.5rem;
    }

    .project-image-wrapper {
        position: relative;
        width: 100%;
        background: #030303;
        height: 450px;
    }

    .project-image-container {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .image-picture {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .project-image {
        max-width: 100%;
        max-height: 100%;
        width: auto;
        height: auto;
        object-fit: contain;
    }

    .project-content {
        margin: 2rem 0;
        line-height: 1.8;
        color: var(--text-secondary);
        font-size: 1.1rem;
        text-align: left;
        font-family: 'Inter', sans-serif;
    }

    .project-meta {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid var(--border-color);
    }

    .meta-item {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .meta-label {
        background-color: #584966;
        color: #fdebf3;
        border-radius: 6px;
        font-family: 'Josefin Sans', sans-serif;
        font-size: 0.7em;
        font-weight: 600;
        padding: 0.3em 0.6em;
        display: inline-block;
    }

    .meta-value {
        color: var(--text-primary);
        font-size:1.1rem;
        line-height: 1.6;
        font-family: 'Inter', sans-serif;
    }

    .meta-link {
        color: #78c2ad;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: color 0.2s ease;
    }

    .meta-link:hover {
        color: #5fa994;
    }

    .tech-stack {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem; 
        margin-top: 0.5rem;
    }

    .tech-badge {
        padding: 0.4em 0.8em;  /* Slightly larger padding */
        background: var(--badge-bg, #f0f0f0);
        color: var(--badge-text, #333);
        border-radius: 4px;
        font-size: 0.9rem;  /* Increased from 0.75rem */
        font-weight: 500;
        font-family: 'Inter', sans-serif;
    }

    @media (max-width: 768px) {
        .project-container {
            padding: 1rem;
        }

        .project-title {
            font-size: 2rem;
        }

        .project-meta {
            grid-template-columns: 1fr;
        }

        .project-image-wrapper {
            height: 300px;
        }
    }
</style>